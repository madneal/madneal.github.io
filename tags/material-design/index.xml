<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Material Design on Neal&#39;s Blog</title>
    <link>https://cdn.jsdelivr.net/gh/neal1991/neal1991.github.io/tags/material-design/</link>
    <description>Recent content in Material Design on Neal&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Thu, 11 May 2017 09:28:40 +0000</lastBuildDate>
    
	<atom:link href="https://cdn.jsdelivr.net/gh/neal1991/neal1991.github.io/tags/material-design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基于Vue JS, Webpack 以及Material Design的渐进式web应用 [Part 1]</title>
      <link>https://cdn.jsdelivr.net/gh/neal1991/neal1991.github.io/post/%E5%9F%BA%E4%BA%8Evue-js-webpack-%E4%BB%A5%E5%8F%8Amaterial-design%E7%9A%84%E6%B8%90%E8%BF%9B%E5%BC%8Fweb%E5%BA%94%E7%94%A8-part-1/</link>
      <pubDate>Thu, 11 May 2017 09:28:40 +0000</pubDate>
      
      <guid>https://cdn.jsdelivr.net/gh/neal1991/neal1991.github.io/post/%E5%9F%BA%E4%BA%8Evue-js-webpack-%E4%BB%A5%E5%8F%8Amaterial-design%E7%9A%84%E6%B8%90%E8%BF%9B%E5%BC%8Fweb%E5%BA%94%E7%94%A8-part-1/</guid>
      <description>基于Vue JS, Webpack 以及Material Design的渐进式web应用 [Part 1] 原文：基于Vue JS, Webpack 以及Material Design的渐进式web应用 [Part 1]
译者：neal1991
welcome to star my articles-translator , providing you advanced articles translation. Any suggestion, please issue or contact me
LICENSE: MIT
渐进式web应用是大势所趋。越来越多的大公司开始使用这些技术（比如推特：https://mobile.twitter.com/）。
想象你可以在地铁中浏览一个web应用，这个应用能够向用户推送通知并且提供实时的数据，以及提供类似于app的浏览，这些就是PWA的大致的能力。
渐进式web应用（PWA）是一个web应用能够提供给用户一种类似于app的体验。PWA得益于现代web科技创新（Service Workers, Native APIS, JS famework）以及提升的web应用质量标准。
如果你想了解更多关于PWA，请访问这个很棒的Google developer page。
看一下下面的PWA！看起来很像原生的app，是不是？
推特渐进式web应用
从开发者的角度来看，PWA相对于原生应用具有巨大的优点。它基本上就是一个网站，因此：
 你可以选择任何你喜欢的框架来进行开发；
 一段代码搞定一切：它是跨平台的以及跨设备的（代码是通过用户的浏览器执行的）；
 很容易获得：不需要通过应用商店来下载。
  然而，在2017年早期，PWA仍然面临一些限制条件：
 Safari不支持一些基本的PWA特性，比如 Service workers，但是苹果公司似乎已经准备开始着手了；
 一些原生的函数依然没有得到支持：对于更多信息，浏览这个页面What web can do。
  教程目标 本教程的目标是利用VueJS以及Webpack从头创建一个基本的但是完整的渐进式web应用。我们的应用将会满足介绍里面的所有需求：渐进式的，响应式的，连接独立的等等。我想给你一个能够在PWA内完成的目标的总览：流畅的原生式的应用，离线行为，原生特性结构，推送通知。</description>
    </item>
    
  </channel>
</rss>