<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on Neal&#39;s Blog</title>
    <link>https://madneal.com/tags/html/</link>
    <description>Recent content in Html on Neal&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 19 May 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://madneal.com/tags/html/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>菜鸟程序员成长史 --记 Github 1000&#43; contributions</title>
      <link>https://madneal.com/post/programer/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      <guid>https://madneal.com/post/programer/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2024/03/29/48EWRegFvPGiMnw.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其实一直以来想写一篇文章总结这几年的技术学习，刚好趁着自己的第一次 github contribution 达到1000+，写篇文章总结以下。本文篇幅较长，我会分为几个章节来分别阐述。&lt;/p&gt;&#xA;&lt;h1 id=&#34;博客篇&#34;&gt;博客篇&lt;/h1&gt;&#xA;&lt;p&gt;为什么我要把博客放在第一位呢？因为我认为博客是developer学习技术的平台，也是developer分享知识的平台，博客差不多也就相当于是developer的名片。现如今，博客平台形形色色，有老牌的博客园，CSDN，也有现在比较新潮的SegmentFault，掘金，开发者头条，知乎等等。现在博客的形式已经发展得多种多样，现如今新潮的犹如各种各样的专栏等等。当然，在这么多博文中，有很多质量很高的文章，也有很多滥竽充数的垃圾文章。下面，我就就我个人的了解探探我接触的这些博客平台，仅是个人观点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;github&#34;&gt;Github&lt;/h2&gt;&#xA;&lt;p&gt;哈哈。我为什么把Github列到博客篇呢？其实现在Github几乎已经成为了我生命中不可或缺的一部分，每天打开电脑的一件事，基本就是打开Github看看。作为世界上最大的同性交友网站，Github对于程序猿来说绝对是生命中不可或缺的部分。在此，我主要说说Github作为博客方面的内容。&#xA;很多人认为Github只不过是一个代码托管的地方，为什么会和博客有关系呢？其实，现在很多人都是在Github的issue里面开博客，因为issue里面方便作者和读者的沟通，而且支持markdown格式，各种功能也是很丰富。对于比较关注的博客，你可以设置watch，这样你就可以了解issue里面的每一次变化，并且还会有相应的邮件通知。在此，给出几个我关注的几个人的Github博客：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/chokcoco/iCSS&#34;&gt;iCSS&lt;/a&gt;：讲解CSS的，有的还是蛮有趣的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/youngwind/blog&#34;&gt;梁少峰的个人博客&lt;/a&gt;：讲解vue讲解的很透彻，百度大牛，我觉得有些博文挺值得看，而且值得多看几遍，不过我好像都没看完。他的博文还是需要深度挖掘的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ccforward/cc&#34;&gt;ccforward/cc&lt;/a&gt;：应该是当初关注他的一个知乎爬虫，他的博客内容我没有看太多，但是内容貌似还不错。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hanzichi/underscore-analysis&#34;&gt;underscore-analysis&lt;/a&gt;：解析underscroe源代码的，挺不错的，我看过一两篇，值得多读几篇，我自己也该去读了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/windiest/Front-end-tutorial&#34;&gt;Front-end-tutorial&lt;/a&gt;：内容很多，我没有过多了解，可以了解一下。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;以上就是我了解的一些在Github上面的博客，因为在Github我没有特别关注这方面，所以还不是特别多，当然Github也不是我主要逛博客的地方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;csdn&#34;&gt;CSDN&lt;/h2&gt;&#xA;&lt;p&gt;CSDN是我开启个人技术博客的地方，感兴趣的地方去我的博客逛逛http://blog.csdn.net/neal1991 。我应该是从2015年4月份开始写博客的，博客的内容主要有我研究生期间一开始做的道路识别的一些研究的论文，虽然这个方向没搞下去，这个方向的确很有前景，只能说老板很有眼光，但我没能力，没能搞下去。其它的也包括一些开发过程遇到的坑之内的，面试经历，技术文章翻译。老实说，CSDN现在的确不是一个很好的平台，因为本身它就偏老，在markdown的显示不是很完美，在移动端显示不是很好，还有一点很重要，广告特别多，还是莫名其妙的，看起来很讨厌。其实我一直都想弃坑，奈何就是github国内访问速度不稳定，还有毕竟在这边维护这么久了，所以还是一直维护着。在CSDN上，我基本上都是去写博客，基本不会在它上面浏览技术博客，因为它的浏览界面实在是太杂乱了，没有重点。这可能也是老牌博客的一个缺点，可能一时半会也没办法改过来。下面我主要讲一些我自己的一些比较稍微有用的博客内容：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/45037265&#34;&gt;combox系列问题集&lt;/a&gt;：当初做winform开发遇到的问题，记得当初最坑爹的是调试combox的时候，visual studio老是崩溃，后来发觉居然是有道翻译的锅，也是醉了。。。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/45128193&#34;&gt;独立成分分析&lt;/a&gt;：这个应该是当初一个讨论班里面要做的一个presentation，我把内容整理出来写了这篇博文，阅读量快2000了，好像是我博客里面阅读次数最多的了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/49027735&#34;&gt;如何查找django安装路径&lt;/a&gt;：非常简单的一个问题，但是当初搜遍了，没找到解决方法。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/51793644&#34;&gt;mongoose对象无法新增删除属性&lt;/a&gt;：当初在处理mongo遇到的一个问题，是个坑。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/60325282&#34;&gt;第一个chrome extension&lt;/a&gt;：第一次写chrome extension，没有想象中的那么复杂，不过还是有一些方法的，貌似360有翻译过谷歌相关的文档。老实说，谷歌真的很良心，现在很多开发者文档都已经是中文的了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/neal1991/article/details/63684674&#34;&gt;第一个pwa&lt;/a&gt;：第一次写progressive web application，其实写pwa和写其它单页面应用没有特别大的区别。pwa也是我非常看到的技术栈，我觉得这个比小程序好上一百倍，只不过现在在国内还是不温不火，但是我觉得很肯能哪一天就星星之火，可以燎原了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;鉴于CSDN平台的种种，我的确越来越不太愿意在这上面写文章。而且我最近的文章一向是以翻译国外技术文章为主，毕竟还是菜，所以只能靠英语吃饭啦。&lt;/p&gt;&#xA;&lt;h2 id=&#34;掘金&#34;&gt;掘金&lt;/h2&gt;&#xA;&lt;p&gt;老实说，掘金应该是同类这种网站访问量比较大的。的确，里面有不少的精品内容，当然也会参杂很多乱七八糟的东西。其实，现在一般的原创博主都不会只在一个平台发文章，所以基本上你这个平台看得到的，在其它平台也差不多都能看到。只不过我现在基本不看掘金了，因为他们的编辑对新人&lt;strong&gt;极度不友善，极度不友好&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;众成翻译&#34;&gt;&lt;a href=&#34;http://www.zcfy.cc/@neal1991&#34;&gt;众成翻译&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;360的一个专门翻译技术博客为主的平台，目前应该还是比较小众。360的前端其实还是蛮不错的，尤其是他们的齐舞团队，里面也有很多大牛。这个平台里面的文章一半质量还是比较高的，而且这个平台翻译操作也是蛮舒适的，感兴趣的非常值得试一试。而且他们的群沟通都很流畅，不像掘金那帮人。。。无力吐槽。&lt;/p&gt;&#xA;&lt;h2 id=&#34;知乎&#34;&gt;知乎&lt;/h2&gt;&#xA;&lt;p&gt;我本身一向是很排斥知乎的。讲心里话，知乎里面百分之八十的人都是在写故事，骗关注的，我也不明白知乎为什么充斥了这么多天天无事可做的人。当然，不可否认的是，知乎里面还是存在百分之二十的精品内容的，这也是让我能够忍受那剩余的百分之八十垃圾的原因。知乎里面那些回答我觉得没有太大的意义，看了也就是笑一笑，一般都是用来刷新三观用的，在此，我仅说一些技术专栏：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/ElemeFE&#34;&gt;饿了么前端&lt;/a&gt;：饿了么现在前端的确搞得风生水起，尤其是pwa，感觉他们是这方面搞得国内最为成熟的一家。可能并不是，但他们肯定是分享这方面内容最多的公司。感觉饿了么前端蛮多大牛，不过感觉他们都喜欢混国外圈，黄玄基本都是在medium发文章的。。。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/wxyyxc1992&#34;&gt;某熊的全栈之路&lt;/a&gt;：这个应该是infoq的专栏，这个编辑每个礼拜会发一个国内外最新技术的文章集合，基本是前端为主。内容比较新颖，基本上最时髦的都在这里面。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/think-in-vue&#34;&gt;Think In Vue&lt;/a&gt;：意如其名，现在vue在国内真的很火。火到我觉得用react的撕逼应该撕不过vue，vue的作者尤雨溪在知乎也是很活跃的，经常手撕任何喷vue的人，还有看他阮一峰每日一喷很有意思。阮老师也是个很有意思的人，感觉天天都有人喷他，但是阮老师的心态丝毫不受影响，剖有大师风范。不过值得一提的是，阮老师博客的广告位可价值不菲哦~~&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/c_63840855&#34;&gt;美团点评技术博客&lt;/a&gt;：算得上是大厂，值得一看。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;知乎乱，前端乱，如何乱中取胜，就是要保持一颗平常心。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开发者头条&#34;&gt;&lt;a href=&#34;https://toutiao.io/subjects/231715&#34;&gt;开发者头条&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;不温不火的平台，文章质量还行。我一般发文章这个里面也会发一份。感觉里面的内容偏机器学习以及架构方面，而且这发文章可以攒IO币，可以换书哟。&lt;/p&gt;&#xA;&lt;h2 id=&#34;medium&#34;&gt;Medium&lt;/h2&gt;&#xA;&lt;p&gt;国外的一个博客平台，访问需要翻墙。这是国外一个专门写story的地方，样式很好看，应该算得上是国外非常知名的一个博客平台了。当然了，里面的内容也是多姿多彩的，同时里面的技术文章质量也有很多很高的文章。现在国内技术圈翻译的大多数文章基本都是来自于这个平台。&lt;/p&gt;&#xA;&lt;h2 id=&#34;quora&#34;&gt;Quora&lt;/h2&gt;&#xA;&lt;p&gt;国外一个和知乎一样的网站。不过知乎由于国内人数优势，火爆异常。Quora则是不温不火，而且上面还有不少华人。我关注过一段时间，但貌似都没什么特别的内容。&#xA;以上基本就是我所有的对于一些博客平台的了解，可能不包含所有，但基本都是我自己的个人的亲身经历。可能部分言辞颇为激烈，但也都是我的肺腑之言。&lt;/p&gt;&#xA;&lt;h2 id=&#34;微信公众号&#34;&gt;微信公众号&lt;/h2&gt;&#xA;&lt;p&gt;微信公众号作为一种特殊的平台，现在也成为一种传播渠道，有点类似于报看订阅的形式。但这不一定是一种非常有效的传播方式，感觉深度还是不够的，我比较喜欢在电脑上看文章，因为在手机上看文章难以持续地专注于一篇有内容的文章，一般就只能浅尝则止。所以我一般都是把链接转到我的微信PC版，然后再用浏览器打开，下面介绍一些我关注的一些技术类公众号：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;前端之巅：我之前提过的，应该是infoQ的平台，其实和之前的知乎专栏应该是重叠的。&lt;/li&gt;&#xA;&lt;li&gt;奇舞周刊：360奇舞团队，前面也介绍过了，国内的知名的前端团队，会有一些比较有价值的文章。&lt;/li&gt;&#xA;&lt;li&gt;前端早读课：每天早上都会发送推文，但是文章质量嘛，参差不齐，基本上都是别人的文章。&lt;/li&gt;&#xA;&lt;li&gt;FEX：百度FEX团队，收集最新技术文章，但是排版比较差，比较原始。&lt;/li&gt;&#xA;&lt;li&gt;神秘的程序员们：里面会有一些脑洞大开的漫画，而且会有程序猿和产品经理以及架构师撕逼的故事，很有趣。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;github-1&#34;&gt;Github&lt;/h1&gt;&#xA;&lt;p&gt;为什么我要把Github单独作为一章节来讲呢？因为它实在太重要了！！！以至于我除了它，根本不想去尝试其它类似的平台。关于Github可以讲的东西太多太多，它带给程序员的则是无穷的魅力。在此，我也仅就几个方面谈谈我的个人理解：&lt;/p&gt;&#xA;&lt;h2 id=&#34;star篇&#34;&gt;star篇&lt;/h2&gt;&#xA;&lt;p&gt;Star是衡量一个开源项目是否受欢迎的重要标准之一（当然也有很多是骗star的）。其实，现在很多人看到一个项目都会去star，但是后续是否会关注，当然也就不一定了。曾经有一段时间，我对star深深着迷（其实现在还是很着迷），我每天都希望有人能给我的项目star，看着别人上千的star我都会超级羡慕。但我其实也能够深深体会到做一个开源项目的不容易，开发者有一个idea往往很简单，但是要去实现它，推广它，完善它。这真的很难很难，而且还会有各种各样形形色色的人问你各种问题，给你提出各种要求，这些都是很痛苦的。但是我依然希望自己有一天还是能够成为一名出色的开源项目的开发者。下面我就挑一些我star的项目来讲一讲：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/prepack&#34;&gt;prepack&lt;/a&gt;：前几天，前端圈最火的技术，编译优化，facebook总是走在潮流之端。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/GoogleChrome/sw-precache&#34;&gt;sw-precache&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/GoogleChrome/sw-toolbox&#34;&gt;sw-toolbox&lt;/a&gt;：谷歌关于pwa的相关工具，值得关注。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cyrus-and/chrome-remote-interface&#34;&gt;chrome-remote-interface&lt;/a&gt;：师妹介绍我的一个调用headless Chrome的工具，文档阅读起来比较痛苦，可以码，虽然你也不一定看。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hammerjs/hammer.js&#34;&gt;hammer.js&lt;/a&gt;：一个移动端手势库，据说很好用，我没用过。。。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/developit/snarkdown&#34;&gt;snarkdown&lt;/a&gt;：一个超级轻量级的markdown库，值得码，虽然你也不一定看。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google/guetzli&#34;&gt;guetzli&lt;/a&gt;：谷歌爸爸推出的压缩图片的工具，听说很强大。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ElemeFE/node-interview&#34;&gt;node-interview&lt;/a&gt;：饿了么的面试指南针。有一段时间Github的trending里面排名前十，有6个项目是国人的，可以想象，现在国人在Github混得有多多。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/thinkjs/thinkjs&#34;&gt;thinkjs&lt;/a&gt;：360团队的一个node.js框架，比较小众，面向企业级应用，没有深入了解过。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/webpack-china/webpack.js.org&#34;&gt;webpack中文文档&lt;/a&gt;：webpack-china的文档翻译，哈哈，我也是翻译者之一。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/vuejs/vuejs.org&#34;&gt;vue&lt;/a&gt;：这个我就不介绍了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Ma63d/leetcode-viewer&#34;&gt;leetcode-viewer&lt;/a&gt;：一个leetcode题目博客，这个博主很厉害，貌似还没毕业。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/csfamily/OfferShow-WebAPP&#34;&gt;offershow&lt;/a&gt;：offer曝光平台，校招的可以关注关注，现在都有小程序了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yarnpkg/yarn&#34;&gt;yarn&lt;/a&gt;：我是不是真的别再用npm了。。。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/electron/electron&#34;&gt;electron&lt;/a&gt;：可以用前端写跨平台应用，一直想写一个。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ariya/phantomjs&#34;&gt;phantomjs&lt;/a&gt;：一个headless webkit，主要用于爬虫和测试。但是好像没剩什么维护者，前段时间两个维护者之一宣布不再继续维护。感觉吧，吃枣药丸。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ecomfe/echarts&#34;&gt;echarts&lt;/a&gt;：百度出品，简单，好用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js&#34;&gt;reveal.js&lt;/a&gt;：一个前端的slider绝对不应该是用ppt做出来的。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;react&lt;/a&gt;：如同vue，我才发现，我很早就star了，然并卵。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;以上，就是我挑出来想讲的一部分。Github里面优秀的项目层出不穷，有很多值得学习的地方，但是有时候也会困惑，不知道从哪一个下手。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用js实现图片轮滑效果</title>
      <link>https://madneal.com/post/%E4%BD%BF%E7%94%A8js%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%BD%AE%E6%BB%91%E6%95%88%E6%9E%9C/</link>
      <pubDate>Wed, 21 Oct 2015 19:57:40 +0000</pubDate>
      <guid>https://madneal.com/post/%E4%BD%BF%E7%94%A8js%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%BD%AE%E6%BB%91%E6%95%88%E6%9E%9C/</guid>
      <description>&lt;p&gt;经常在购物网站，看到那种图片轮滑的效果，所以看到有人实现了，所以我也就学习下了。&#xA;首先贴出html代码：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;&#xA;    &amp;lt;title&amp;gt;document&amp;lt;/title&amp;gt;&#xA;    &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;style.css&amp;#34;&amp;gt;&#xA;    &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;javascript.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;&amp;lt;div id=&amp;#34;flash&amp;#34;&amp;gt;&#xA;    &amp;lt;ul id=&amp;#34;pic&amp;#34;&amp;gt;&#xA;        &amp;lt;li style=&amp;#34;display:block&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34; &amp;gt;&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;&amp;lt;img src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/li&amp;gt;&#xA;    &amp;lt;/ul&amp;gt;&#xA;    &amp;lt;ol id=&amp;#34;num&amp;#34;&amp;gt;&#xA;        &amp;lt;li class=&amp;#34;activate&amp;#34;&amp;gt;1&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;2&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;3&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;4&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;5&amp;lt;/li&amp;gt;&#xA;        &amp;lt;li&amp;gt;6&amp;lt;/li&amp;gt;&#xA;    &amp;lt;/ol&amp;gt;&#xA;    &amp;lt;a href=&amp;#34;javascript:;&amp;#34; class=&amp;#34;arrow&amp;#34; id=&amp;#34;left&amp;#34;&amp;gt;&amp;amp;lt;&amp;lt;/a&amp;gt;&#xA;    &amp;lt;a href=&amp;#34;javascript:;&amp;#34; class=&amp;#34;arrow&amp;#34; id=&amp;#34;right&amp;#34;&amp;gt;&amp;amp;gt;&amp;lt;/a&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;图像的原路径我就不制定了，css文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* {&#xA;    margin: 0;&#xA;    padding: 0;&#xA;    list-style: none;&#xA;}&#xA;a&#xA;{&#xA;    text-decoration: none;&#xA;    color: #fff;&#xA;}&#xA;#flash&#xA;{&#xA;    width: 730px;&#xA;    height: 454px;&#xA;    margin: 100px auto;&#xA;    position: relative;&#xA;    cursor: pointer;&#xA;}&#xA;#pic li&#xA;{&#xA;    position: absolute;&#xA;    top: 0;&#xA;    left: 0;&#xA;    z-index: 1;&#xA;    display: none;&#xA;}&#xA;#num&#xA;{&#xA;    position: absolute;&#xA;    left: 40%;&#xA;    bottom: 10px;&#xA;    z-index: 2;&#xA;    cursor:default;&#xA;}&#xA;#num li&#xA;{&#xA;    float: left;&#xA;    width: 20px;&#xA;    height: 20px;&#xA;    border-radius: 50%;&#xA;    background: #666;&#xA;    margin: 3px;&#xA;    line-height: 20px;&#xA;    text-align: center;&#xA;    color: #fff;&#xA;    cursor: pointer;&#xA;}&#xA;#num li.active&#xA;{&#xA;    background: #f00;&#xA;}&#xA;.arrow{&#xA;    height: 60px;&#xA;    width: 30px;&#xA;    line-height: 60px;&#xA;    text-align: center;&#xA;    display: block;&#xA;    position: absolute;&#xA;    top:45%;&#xA;    background-color: rgba(0,0,0,0.3);&#xA;    z-index: 3;&#xA;    display: none;&#xA;}&#xA;.arrow:hover&#xA;{&#xA;    background: rgba(0,0,0,0.7);&#xA;}&#xA;#flash:hover .arrow&#xA;{&#xA;    display: block;&#xA;}&#xA;#left&#xA;{&#xA;    left: 2%;&#xA;}&#xA;#right&#xA;{&#xA;    right: 2%;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;js代码：&lt;/p&gt;</description>
    </item>
    <item>
      <title>css样式表的引入方式</title>
      <link>https://madneal.com/post/css%E6%A0%B7%E5%BC%8F%E8%A1%A8%E7%9A%84%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 06 Oct 2015 16:11:46 +0000</pubDate>
      <guid>https://madneal.com/post/css%E6%A0%B7%E5%BC%8F%E8%A1%A8%E7%9A%84%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;p&gt;一般来说，css 有两种样式表的引入方式，在这里我记录一下，比较这两种引入方式的区别：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;css文件&amp;#34;&amp;gt;&#xA;&#xA;@import &amp;#34;css文件&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;显然第一种方式似乎是更常见的。事实上，使用这两种方式引入css文件的效果都是一致的，区别在于&lt;!-- raw HTML omitted --&gt;是html标记，而@import是css语法。&lt;!-- raw HTML omitted --&gt;标记有rel,type和href属性，可以制定css样式表的名称，这样可以利用javascript的语法来控制。举例来说，我们可以在一个网页中链接多个css样式文件，在利用javascript语法控制不同情况下显示的样式文件，例如让用户在点击某个按钮之后更换网页的背景颜色，或者随着时间来更换网页的背景颜色，正因为link方式的弹性更大，这也是为什么这种方式更为常见的原因。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
