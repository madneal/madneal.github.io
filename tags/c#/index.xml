<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Neal&#39;s Blog</title>
    <link>https://madneal.com/tags/c%23/</link>
    <description>Recent content in C# on Neal&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Tue, 28 Apr 2015 11:45:14 +0000</lastBuildDate>
    <atom:link href="https://madneal.com/tags/c%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何将网络流转化为内存流 C#</title>
      <link>https://madneal.com/post/%E5%A6%82%E4%BD%95%E5%B0%86%E7%BD%91%E7%BB%9C%E6%B5%81%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%86%85%E5%AD%98%E6%B5%81-c%23/</link>
      <pubDate>Tue, 28 Apr 2015 11:45:14 +0000</pubDate>
      <guid>https://madneal.com/post/%E5%A6%82%E4%BD%95%E5%B0%86%E7%BD%91%E7%BB%9C%E6%B5%81%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%86%85%E5%AD%98%E6%B5%81-c%23/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;        //将获取的文件流转化为内存流&#xA;        public static MemoryStream ConvertStreamToMemoryStream(Stream stream)&#xA;        {&#xA;            MemoryStream memoryStream = new MemoryStream();&#xA;            if (stream != null)&#xA;            {&#xA;                byte[] buffer = ReadFull(stream);&#xA;                if (buffer != null)&#xA;                {&#xA;                    var binaryWriter = new BinaryWriter(memoryStream);&#xA;                    binaryWriter.Write(buffer);&#xA;                }&#xA;            }&#xA;            return memoryStream;&#xA;        }&#xA;&#xA;        public static byte[] ReadFull(Stream input)&#xA;        {&#xA;            byte[] buffer = new byte[16 * 1024];&#xA;            using (MemoryStream ms = new MemoryStream())&#xA;            {&#xA;                int read;&#xA;                while ((read = input.Read(buffer, 0, buffer.Length)) &amp;gt; 0)&#xA;                {&#xA;                    ms.Write(buffer, 0, read);&#xA;                }&#xA;                return ms.ToArray();&#xA;            }&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
