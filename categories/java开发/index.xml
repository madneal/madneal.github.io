<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java开发 on Neal&#39;s Blog</title>
    <link>https://madneal.com/categories/java%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in Java开发 on Neal&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 26 Nov 2017 16:29:33 +0000</lastBuildDate>
    <atom:link href="https://madneal.com/categories/java%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>POI读取文件的最佳实践</title>
      <link>https://madneal.com/post/poi%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 26 Nov 2017 16:29:33 +0000</pubDate>
      <guid>https://madneal.com/post/poi%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://poi.apache.org/&#34;&gt;POI&lt;/a&gt;是 Apache 旗下一款读写微软家文档声名显赫的类库。应该很多人在做报表的导出，或者创建 word 文档以及读取之类的都是用过 POI。POI 也的确对于这些操作带来很大的便利性。我最近做的一个工具就是读取计算机中的 word 以及 excel 文件。下面我就两方面讲解以下遇到的一些坑：&lt;/p&gt;&#xA;&lt;h2 id=&#34;word-篇&#34;&gt;word 篇&lt;/h2&gt;&#xA;&lt;p&gt;对于 word 文件，我需要的就是提取文件中正文的文字。所以可以创建一个方法来读取 doc 或者 docx 文件：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    private static String readDoc(String filePath, InputStream is) {&#xA;        String text= &amp;#34;&amp;#34;;&#xA;        try {&#xA;            if (filePath.endsWith(&amp;#34;doc&amp;#34;)) {&#xA;                WordExtractor ex = new WordExtractor(is);&#xA;                text = ex.getText();&#xA;                ex.close();&#xA;                is.close();&#xA;            } else if(filePath.endsWith(&amp;#34;docx&amp;#34;)) {&#xA;                XWPFDocument doc = new XWPFDocument(is);&#xA;                XWPFWordExtractor extractor = new XWPFWordExtractor(doc);&#xA;                text = extractor.getText();&#xA;                extractor.close();&#xA;                is.close();&#xA;            }&#xA;        } catch (Exception e) {&#xA;            logger.error(filePath, e);&#xA;        } finally {&#xA;            if (is != null) {&#xA;                is.close();&#xA;            }&#xA;        }&#xA;        return text;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;理论上来说，这段代码应该对于读取大多数 doc 或者 docx 文件都是有效的。但是!!!!我发现了一个奇怪的问题，就是我的代码在读取某些 doc 文件的时候，经常会给出这样的一个异常：&lt;/p&gt;</description>
    </item>
    <item>
      <title>sftp没有关闭session导致服务器sshd进程未关闭</title>
      <link>https://madneal.com/post/sftp%E6%B2%A1%E6%9C%89%E5%85%B3%E9%97%ADsession%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%99%A8sshd%E8%BF%9B%E7%A8%8B%E6%9C%AA%E5%85%B3%E9%97%AD/</link>
      <pubDate>Thu, 28 Jul 2016 17:09:59 +0000</pubDate>
      <guid>https://madneal.com/post/sftp%E6%B2%A1%E6%9C%89%E5%85%B3%E9%97%ADsession%E5%AF%BC%E8%87%B4%E6%9C%8D%E5%8A%A1%E5%99%A8sshd%E8%BF%9B%E7%A8%8B%E6%9C%AA%E5%85%B3%E9%97%AD/</guid>
      <description>&lt;p&gt;项目中需要用Sftp上传下载文件，通过jsch中的sftp实现。代码上了服务器之后，发觉服务器多了很多进程没有被关闭。&#xA;&lt;img src=&#34;http://img.blog.csdn.net/20160728170459770&#34; alt=&#34;这里写图片描述&#34;&gt;&#xA;连接sftp代码：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; protected boolean connectToServer() {&#xA;        try {&#xA;            JSch jsch = new JSch();&#xA;            jsch.getSession(userName, hostname, port);&#xA;            Session sshSession = jsch.getSession(userName, hostname, port);&#xA;            logger.debug(&amp;#34;HostName:&amp;#34; + hostname + &amp;#34;|Port:&amp;#34; + port);&#xA;            logger.debug(&amp;#34;Session created&amp;#34;);&#xA;            sshSession.setPassword(password);&#xA;            Properties sshConfig = new Properties();&#xA;            sshConfig.put(&amp;#34;StrictHostKeyChecking&amp;#34;, &amp;#34;no&amp;#34;);&#xA;            sshSession.setConfig(sshConfig);&#xA;            sshSession.setTimeout(TIMEOUT); //ms&#xA;            sshSession.connect();&#xA;            sftp = (ChannelSftp) sshSession.openChannel(&amp;#34;sftp&amp;#34;);&#xA;            sftp.connect();&#xA;            if (!sftp.isConnected()) {&#xA;                logger.error(&amp;#34;Failed to connect FTP server &amp;#34; + hostname);&#xA;                return false;&#xA;            }&#xA;            logger.debug(&amp;#34;Username:&amp;#34; + userName + &amp;#34;|Password:&amp;#34; + password);&#xA;        } catch (Exception ex) {&#xA;            logger.error(ex);&#xA;        }&#xA;        return true;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其实每次执行完都会&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
