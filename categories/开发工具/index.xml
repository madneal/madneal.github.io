<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发工具 on Neal&#39;s Blog</title>
    <link>https://madneal.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 开发工具 on Neal&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 01 May 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://madneal.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>goland-2022.01版本最新实用功能</title>
      <link>https://madneal.com/post/goland/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      <guid>https://madneal.com/post/goland/</guid>
      <description>&lt;p&gt;在 Go 的开发过程中，经常遇到一个非常麻烦的问题就是 &lt;code&gt;JSON&lt;/code&gt; 的解析。因为 Go 中的 &lt;code&gt;JSON&lt;/code&gt; 的解析，一般来说需要定义对应 &lt;code&gt;JSON&lt;/code&gt; 的 struct。或者使用 &lt;code&gt;interface{}&lt;/code&gt; 类型来进行定义，然后再进行类型的转换。当然这在 Python 中可能两三句话就搞定了。&lt;/p&gt;&#xA;&lt;p&gt;在 Goland 2022.01 最新版本中，终于迎来了在 &lt;code&gt;JSON&lt;/code&gt; 方面解析的便捷功能。在最新版本中，只要将 &lt;code&gt;JSON&lt;/code&gt;  粘贴到 IDE 中就会提示是否转化为 &lt;code&gt;struct&lt;/code&gt; 类型，所有的字段都会被生成，相对于以前的一个个的手动的定义要方便太多太多了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/01/vrSC83Kauqls1UY.gif&#34; alt=&#34;go_converting_json_to_struct.animated.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;还可以使用 Action 来进行转换动作，&lt;code&gt;Generate Go Type form JSON&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/01/3vfFiJLTnHZ7h5q.gif&#34; alt=&#34;go_modify_json_for_a_struct_in_a_separate_dialog.animated.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;同时还可以添加新的 tag，key 以及修改 key 的代码风格，调用来说一般使用 &lt;code&gt;alt+enter&lt;/code&gt; 快捷键即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;intention-actions&#34;&gt;Intention actions&lt;/h2&gt;&#xA;&lt;p&gt;字段添加新的 tag&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;点击 &lt;code&gt;struct&lt;/code&gt; 的字段然后按 &lt;code&gt;alt+enter&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;选择 &lt;code&gt;Add key to tags&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/01/GQ4BeAxFrzinKPw.gif&#34; alt=&#34;go_add_new_tags_to_a_struct_field.animated.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;修改 key&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;点击 &lt;code&gt;struct&lt;/code&gt; 的字段然后按 &lt;code&gt;alt+enter&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;选择 &lt;code&gt;Update key value in tags&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/05/01/fEBJmDLhl8KeoIa.gif&#34; alt=&#34;go_modify_keys_in_field_tags.animated.gif&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>将Medium中的博客导出成markdown</title>
      <link>https://madneal.com/post/%E5%B0%86medium%E4%B8%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%AF%BC%E5%87%BA%E6%88%90markdown/</link>
      <pubDate>Sat, 23 Sep 2017 16:33:06 +0000</pubDate>
      <guid>https://madneal.com/post/%E5%B0%86medium%E4%B8%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%AF%BC%E5%87%BA%E6%88%90markdown/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://medium.com&#34;&gt;Medium&lt;/a&gt;（需要翻墙访问）是国外非常知名的一个博客平台。上面经常有很多知名的技术大牛在上面发布博客，现在一般国内的搬运的技术文章大多数都是来自于这个平台。&lt;/p&gt;&#xA;&lt;p&gt;Medium 文章格式显示地非常优雅，但是存在一个问题。众所周知，markdown已经是最受程序猿欢迎的文本编辑格式之一。但是Medium仅仅支持markdown格式导入，不支持markdown格式的导出。这也正是我当初开发这个插件&lt;a href=&#34;https://github.com/neal1991/export-medium&#34;&gt;export-medium&lt;/a&gt;的原因，现在这个项目是放在github上面的，欢迎大家多多star,或者pr。自己也花了5美金，注册了开发者账号，因为现在chrome对于不是商店的插件限制很严格，如果没上商店，一直有提醒，很麻烦。商店访问地址在&lt;a href=&#34;https://chrome.google.com/webstore/detail/dodkihcbgpjblncjahodbnlgkkflliim/publish-accepted?utm_source=chrome-ntp-icon&amp;amp;authuser=1&#34;&gt;这&lt;/a&gt;,需要翻墙访问。不过你可以手动安装:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将 &lt;a href=&#34;https://github.com/neal1991/export-medium&#34;&gt;export-medium&lt;/a&gt; clone 或者下载到本地。&lt;/li&gt;&#xA;&lt;li&gt;在 Chrome 浏览中打开&lt;code&gt;chrome://extensions&lt;/code&gt;,加载已解压的拓展程序，选择项目文件夹&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://img.blog.csdn.net/20170923163242479?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbmVhbDE5OTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这两种方法都是可以支持安装的。目前这个插件的功能主要是把Medium上面的文章解析成 markdown 格式的文本，用了一个简单的库去渲染（事实上我觉得挺鸡肋的），然后你只要点击一个按钮就可以把文本复制到剪切板，就可以复制到编辑器了，是不是很方便。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://okja9ah81.bkt.clouddn.com/export-to-meidum.gif&#34; alt=&#34;clipboard.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;目前可能很多页面做的不是特别好看，欢迎大家感兴趣的可以试用或者向我提建议。&lt;/p&gt;&#xA;&lt;p&gt;仓库地址: &lt;a href=&#34;https://github.com/neal1991/export-medium&#34;&gt;https://github.com/neal1991/export-medium&lt;/a&gt;  （喜欢的还请多多star!!!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>markdown语法规则</title>
      <link>https://madneal.com/post/markdown%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/</link>
      <pubDate>Tue, 06 Oct 2015 20:47:17 +0000</pubDate>
      <guid>https://madneal.com/post/markdown%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/</guid>
      <description>&lt;p&gt;标题&#xA;标题是每篇文章最常用的格式，在markdown中如果要定义标题的话，只要在这段文字之前加#号就可以了。&lt;/p&gt;&#xA;&lt;h1 id=&#34;一级标题&#34;&gt;一级标题&lt;/h1&gt;&#xA;&lt;h2 id=&#34;二级标题&#34;&gt;二级标题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;三级标题&#34;&gt;三级标题&lt;/h3&gt;&#xA;&lt;p&gt;以此类推，总共六级标题，建议在#号之后加上一个空格，这是标准的markdown语法。&#xA;列表&#xA;列表主要分为有序列表和无序列表。只需要在文字前加上-或*即可变成无序列表，有序列表直接在文字前加上1. 2. 3. 符号和要在文字之前加一个空格就可以了。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1&lt;/li&gt;&#xA;&lt;li&gt;2&lt;/li&gt;&#xA;&lt;li&gt;3&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1&lt;/li&gt;&#xA;&lt;li&gt;2&lt;/li&gt;&#xA;&lt;li&gt;3&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;引用&#xA;如果你要饮用一段话的话，那么你只要在引用的文字前加上&amp;gt;这种尖括号就可以了&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这是我要引用的文字&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;图片和链接&#xA;插入链接和图片的方法很像，区别在于一个感叹号&#xA;图片为：&lt;img src=&#34;&#34; alt=&#34;&#34;&gt;{ImgCap}{/ImgCap}&#xA;链接为：&lt;a href=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;粗体和斜体&#xA;粗体和斜体也很简单，用两个&lt;em&gt;包含一段文本就是粗体的语法，用一个&lt;/em&gt;包含一段文本就斜体的语法。&#xA;&lt;em&gt;这是粗体&lt;/em&gt;&#xA;&lt;em&gt;这是粗体&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;表格&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Tables&lt;/th&gt;&#xA;          &lt;th&gt;are&lt;/th&gt;&#xA;          &lt;th&gt;cool&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;col1&lt;/td&gt;&#xA;          &lt;td&gt;clo2&lt;/td&gt;&#xA;          &lt;td&gt;col3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;分割线&#xA;分割线的语法只需要三个*号就可以了&#xA;分割线上&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;分割线下&lt;/p&gt;</description>
    </item>
    <item>
      <title>combox系列问题集</title>
      <link>https://madneal.com/post/combox%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98%E9%9B%86/</link>
      <pubDate>Tue, 14 Apr 2015 09:04:09 +0000</pubDate>
      <guid>https://madneal.com/post/combox%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98%E9%9B%86/</guid>
      <description>&lt;h2 id=&#34;visual-studio崩溃&#34;&gt;visual studio崩溃&lt;/h2&gt;&#xA;&lt;p&gt;你是不是经常会遇到一编辑combox，visual studio就会立马崩溃。一直都无法理解是什么原因，然后后来发现居然是因为有道的截屏翻译，关掉截屏翻译就好了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;combox绑定数据源&#34;&gt;combox绑定数据源&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;            SqliteDataReader dr;&#xA;            if (dr.Read())&#xA;            {&#xA;                this.comboBox1.Items.Add(dr[0]);&#xA;            }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;自动补全的功能&#34;&gt;自动补全的功能&lt;/h2&gt;&#xA;&lt;p&gt;我们希望在combox中实现输入的时候，有推荐的文本自动补全功能。我们主要只需要设置AutoCompleteMode和AutoCompleteSource这两个属性就可以了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;模糊查询&#34;&gt;模糊查询&lt;/h2&gt;&#xA;&lt;p&gt;上面那个自动补全的功能只能实现从左到右进行匹配，而不能进行模糊匹配。假设我们的combobox里面有“张三“，如果输入”张“可以进行匹配，但是我们如果输入”三“的话就无法实现匹配，而combobox自身并没有这个属性，所以我们需要自己写一个方法来实现。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;        List&amp;lt;string&amp;gt; listOnit = new List&amp;lt;string&amp;gt;();&#xA;        List&amp;lt;string&amp;gt; listNew = new List&amp;lt;string&amp;gt;();&#xA;        &#xA;        //用于模糊查询&#xA;        private void BindComboBox()&#xA;        {&#xA;            string str = &amp;#34;select License from tb_drug&amp;#34;;&#xA;            SQLiteDataReader sdr = sh.getcom(str);&#xA;            while (sdr.Read())&#xA;            {&#xA;                if (sdr[0].ToString() != &amp;#34; &amp;#34; &amp;amp;&amp;amp; sdr[0].ToString() != null)&#xA;                    listOnit.Add(sdr[0].ToString());               &#xA;            }&#xA;            sdr.Close();&#xA;            this.comboBox1.Items.AddRange(listOnit.ToArray());&#xA;        }&#xA;&#xA;        private void comboBox1_TextUpdate(object sender, EventArgs e)&#xA;        {&#xA;            this.comboBox1.Items.Clear();&#xA;            listNew.Clear();&#xA;            foreach (var item in listOnit)&#xA;            {&#xA;                if (item.Contains(this.comboBox1.Text))&#xA;                {&#xA;                    listNew.Add(item);&#xA;                }&#xA;            }&#xA;            this.comboBox1.Items.AddRange(listNew.ToArray());&#xA;            this.comboBox1.SelectionStart = this.comboBox1.Text.Length;&#xA;            Cursor = Cursors.Default;&#xA;            this.comboBox1.DroppedDown = true;&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>初识NuGet</title>
      <link>https://madneal.com/post/%E5%88%9D%E8%AF%86nuget/</link>
      <pubDate>Sun, 12 Apr 2015 16:32:36 +0000</pubDate>
      <guid>https://madneal.com/post/%E5%88%9D%E8%AF%86nuget/</guid>
      <description>&lt;p&gt;因为想查一查opencvsharp的东西，然后发觉这个包可以再NuGet上面可以直接下载。我也经常在很多地方都可以看到NuGet，所以我想写下来，记录下来。&#xA;NuGet是一个免费的并且开源的包管理器在微软的开发平台上。NuGet发布在Visual Studio的拓展插件上。&#xA;NuGet现在已经移植到代码管理平台github了，链接地址为https://github.com/nuget/home。他们打算以后新的东西都在这个网址更新了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;资源&#34;&gt;资源&lt;/h2&gt;&#xA;&lt;p&gt;NuGet Gallery: &lt;a href=&#34;http://nuget.org&#34;&gt;http://nuget.org&lt;/a&gt;&#xA;Documentation: &lt;a href=&#34;http://docs.nuget.org&#34;&gt;http://docs.nuget.org&lt;/a&gt;&#xA;Blog: &lt;a href=&#34;http://blog.nuget.org&#34;&gt;http://blog.nuget.org&lt;/a&gt;&#xA;Twitter: @nuget&#xA;JabbR chat: &lt;a href=&#34;https://jabbr.net/#rooms/nuget&#34;&gt;https://jabbr.net/#rooms/nuget&lt;/a&gt;&#xA;TeamCity continuous build server: &lt;a href=&#34;http://build.nuget.org&#34;&gt;http://build.nuget.org&lt;/a&gt;&#xA;Latest successful VS Extension build: &lt;a href=&#34;http://build.nuget.org/NuGet.Tools.vsix&#34;&gt;http://build.nuget.org/NuGet.Tools.vsix&lt;/a&gt;&#xA;Latest successful NuGet.exe build: &lt;a href=&#34;http://build.nuget.org/NuGet.exe&#34;&gt;http://build.nuget.org/NuGet.exe&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;NuGet貌似自从vs2012版本之后就默认在系统中了，所以不需要再安装了。如果想确保你的版本有没有安装NuGet，你可以看一下工具栏。你也可以在扩展和更新中可以进行NuGet的更新和管理。&#xA;只要你安装了，就可以非常方便的引用第三方的库，直接在引用里面添加就可以了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
